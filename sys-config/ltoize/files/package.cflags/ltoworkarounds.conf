#Packages which require fat LTO objects in order to build (TESTING: STRIP_MASK)
#or which others depend on non-LTO symbols (previously was ltofat.conf)
dev-haskell/* *FLAGS+=-ffat-lto-objects #This is so non-portage GHC compilations work, as GHC is oblivious to LTO.  portage builds are fine.
sys-boot/syslinux *FLAGS+=-ffat-lto-objects #Requires ld.bfd
app-editors/vim "has perl ${IUSE//+} && use perl && FlagAddAllFlags -ffat-lto-objects" # required for perl USE flag
dev-lang/moarvm *FLAGS+=-ffat-lto-objects # required for perl6 (i.e., dev-lang/nqp and dev-lang/rakudo to build)
sci-libs/mpir *FLAGS+=-ffat-lto-objects # compilation error without fat LTO (not linking error)
app-crypt/efitools *FLAGS+=-ffat-lto-objects # textrel?
dev-util/cargo *FLAGS+=-ffat-lto-objects # fails to link against git2 functions without
x11-terms/alacritty *FLAGS+=-ffat-lto-objects
sys-apps/exa *FLAGS+=-ffat-lto-objects # fails to link against git2 functions
sys-apps/bat *FLAGS+=-ffat-lto-objects # fails to link against git2 functions
sys-power/nut *FLAGS+=-ffat-lto-objects # fails during configure otherwise

#Packages which cannot be built with LTO at all (previously was nolto.conf)
dev-util/perf *FLAGS-=-flto*
app-emulation/qemu *FLAGS-=-flto* *FLAGS+=-fno-strict-aliasing # required to compile qemu
media-libs/alsa-lib *FLAGS-=-flto*
dev-libs/elfutils *FLAGS-=-flto*
dev-db/mysql-connector-c *FLAGS-=-flto* # required to compiled mysql-connector-c
dev-qt/qtwebengine *FLAGS-=-flto* #needs retest
dev-qt/qtwebkit *FLAGS-=-flto*
dev-lang/rust *FLAGS-=-flto*
dev-util/valgrind *FLAGS-=-flto*
app-text/texlive-core *FLAGS-=-flto*
media-sound/pulseaudio *FLAGS-=-flto*
dev-db/mariadb *FLAGS-=-flto*
sci-libs/arrayfire *FLAGS-=-flto*
dev-lang/perl *FLAGS-=-flto*
net-misc/dhcp "has server ${IUSE//+} && use server && FlagSubAllFlags -flto*" # Cannot be built with LTO by default, but can if "server" USE is disabled
app-admin/keepassxc "has autotype ${IUSE//+} && use autotype && FlagSubAllFlags -flto*" # Cannot be built with LTO if using autotype
sys-devel/gdb *FLAGS-=-flto*
dev-lang/spidermonkey *FLAGS-=-flto*
net-wireless/aircrack-ng *FLAGS-=-flto*
net-libs/webkit-gtk:3 *FLAGS-=-flto*
net-libs/webkit-gtk:4 *FLAGS-=-flto*
media-video/mplayer *FLAGS-=-flto*
sys-process/numactl *FLAGS-=-flto* # Undefined references
dev-vcs/cvs *FLAGS-=-flto* # Undefined references
sci-libs/scipy *FLAGS-=-flto*
media-libs/mlt *FLAGS-=-flto*
dev-java/icedtea *FLAGS-=-flto*
app-emulation/virtualbox *FLAGS-=-flto*
app-emulation/virtualbox-extpack-oracle *FLAGS-=-flto*
kde-apps/kdenlive *FLAGS-=-flto*
games-action/extreme-tuxracer *FLAGS-=-flto*
app-office/scribus *FLAGS-=-flto* # Scribus crashes on startup if compiled with LTO
sys-libs/libcxxabi *FLAGS-=-flto* # /var/tmp/portage/sys-libs/libcxxabi-4.0.1/temp/ccXYODmk.ltrans0.ltrans.o:<artificial>:DW.ref.__gcc_personality_v0: error: undefined reference to '__gcc_personality_v0'
games-emulation/parallel-n64-libretro *FLAGS-=-flto*
games-emulation/mupen64plus-libretro *FLAGS-=-flto*
net-p2p/cpuminer-opt *FLAGS-=-flto*
x11-drivers/xf86-video-intel *FLAGS-=-flto*
<app-text/mupdf-1.12.0 *FLAGS-=-flto* # Only older versions are affected
dev-scheme/racket *FLAGS-=-flto* *FLAGS-="-fipa-pta" # Undefined references and multiple segfaults / violations during build.
sys-libs/libsepol *FLAGS-=-flto*
sys-libs/libselinux *FLAGS-=-flto*
sys-libs/libsemanage *FLAGS-=-flto*
gnome-base/gnome-keyring *FLAGS-=-flto*
dev-libs/weston *FLAGS-=-flto*
>=dev-lang/php-7.2.0 *FLAGS-=-flto* # lto-wrapper link failure / https://github.com/InBetweenNames/gentooLTO/issues/135
sys-fs/fuse *FLAGS-=-flto* # Issue #139 and #142, it appears the symbol __fuse_read_cmd goes missing if LTO is enabled, causing linking problems on some systems.  Using gold seems to help.
sys-fs/fuse-common *FLAGS-=-flto*
sys-libs/glibc *FLAGS-=-flto* #Alternative: *FLAGS+=-ffat-lto-objects *FLAGS-="-fipa-pta" Fails in configure stage with LTO enabled, checking for builtin redirect.  With -ffat-lto-objects, and no -fipa-pta, we get further, but get multiple definition errors  Forcing past that yields undefined symbol errors.
app-emulation/wine* *FLAGS-=-flto*
sys-process/criu *FLAGS-=-pipe* *FLAGS-=-flto* *FLAGS-="-fuse-linker-plugin" LDFLAGS-="-Wl,--hash-style=gnu" *FLAGS-="${GRAPHITE}" # Fewer settings may be possible. Needs testing. (Dependency of LXC.)
media-video/ffmpeg *FLAGS-=-flto* #NOTE: Depending on your CPUFLAGS this may work with LTO.  The SSE intrinsics seem to cause problems in some cases. Only x86 requires workaround
app-emulation/dosemu *FLAGS-=-flto* # Issue #163
sci-electronics/kicad *FLAGS-=-flto* # Issue #168
kde-frameworks/kjs *FLAGS-=-flto* # Issue #181
dev-scheme/guile *FLAGS-=-flto* # Issue #193
dev-libs/libsigsegv *FLAGS-=-flto* # Issue #189
net-p2p/retroshare *FLAGS-=-flto* # Issue #129, ICE on amd64
net-misc/lksctp-tools *FLAGS-=-flto* # function `main': <artificial>:(.text.startup+0x16de): undefined reference to `sctp_connectx'
dev-lang/mono *FLAGS-=-flto*
sys-apps/acl *FLAGS-=-flto* # Issue #209, builds fine but we cannot set any acl value using the program.
dev-java/openjdk *FLAGS-=-flto* # Issue #204, undefined references with LTO.
sys-apps/nix *FLAGS-=-flto* # Issue #222, LTO causes runtime failures
sys-apps/man-db *FLAGS-=-flto* # Issue #403, LTO causes runtime failures
sys-apps/fwupd *FLAGS-=-flto* # Issue #225, LTO causes runtime failures
sci-visualization/paraview *FLAGS-=-flto*
app-emulation/libguestfs *FLAGS-=-flto*
media-gfx/shotwell *FLAGS-=-flto* #Library search error with LTO enabled
dev-tex/chktex "use pcre && FlagSubAllFlags -flto*" # Segmentation faults as libpcre doesn't get linked-in properly
www-apps/hugo *FLAGS-=-flto*
sys-libs/musl *FLAGS-=-flto*
sys-apps/fakechroot *FLAGS-=-flto* # "Cgraph edge statement index out of range" error when linking with LTO enabled
dev-db/firebird *FLAGS=-flto*
app-office/libreoffice "has firebird ${IUSE//+} && use firebird && FlagSubAllFlags -flto*"

# BEGIN: LTO not recommended
# Packages which can be built with LTO but leads to problems/crashes/segfaults
media-sound/jack2 *FLAGS-=-flto* # segfault in libjack.so.0.1.0 when ANY app trying to use it (breaks everithing built w/ JACK support)
net-misc/openssh *FLAGS-=-flto* # hangs on exit with lto
net-news/rssguard *FLAGS-=-flto* # https://bugreports.qt.io/browse/QTBUG-41301 and https://github.com/martinrotter/rssguard/issues/156
#dev-qt/qtcore *FLAGS-=-flto* # qt_version_tag
net-proxy/privoxy *FLAGS-=-flto* #Issue #145, service will not start when built with LTO
app-cdr/cdrtools *FLAGS-=-flto* # SCSI buffer size 0 when attempting to burn disc, reports "Unknown error 64512"
dev-qt/qtscript *FLAGS-=-flto* #LTO patch exists, but crashes on newer Qt versions.  Needs to be updated.
dev-libs/protobuf *FLAGS-=-flto* #Upstream bug https://github.com/protocolbuffers/protobuf/issues/4958
>=sys-apps/attr-2.4.48 *FLAGS-=-flto* # Issue #268, causes segfaults all over the system
dev-libs/libaio *FLAGS-=-flto* # Issue #314, missing symbols in LTO build compared to non-LTO build, leads to problems with sys-fs/lvm2
sys-apps/apparmor *FLAGS-=-flto* # Issue #299, ODR violation, still builds and runs on some configurations
media-libs/mesa *FLAGS-=-flto* # Issue #143, compiles sometimes, but exhibits runtime errors when used with LTO.  AMD and Intel drivers are known to fail. #*FLAGS-=-Wl,--as-needed # strange LTO linking bug that causes pthreads to be thrown out early under LTO (#50)
sys-apps/sandbox *FLAGS-=-flto* # Issue #347, LTO breaks basic sandboxing functionality
sci-libs/tensorflow *FLAGS-=-flto* # Issue #432 tensorflow-estimator fails with missing symbol __cpu_model
# END: LTO not recommended

#Packages which Graphite optimizations don't play nice with
# BEGIN: Graphite ICE (Internal Compiler Error)
# Report them to GCC team
sci-libs/scipy F*FLAGS-="-floop-nest-optimize" NOFFLAGS=1  # gentooLTO issue #450, gentoo bug #702968, gcc bug #92945, possibly #90004
# END: Graphite ICE (Internal Compiler Error)

#Packages which require build workarounds to be built with LTO that can be resolved directly in *FLAGS
sys-devel/gettext *FLAGS+=-lm # needed for linker to resolve libm's log10 -- only needed for LTO
media-libs/ilmbase *FLAGS+=-lrt # needed for linker to build media-libs/openexr with LTO
x11-libs/wxGTK NOLDADD=1 C*FLAGS-="-Wl,*" # Issue #40, does not build when -Wl linker flags are passed to the compiler through C*FLAGS
#dev-qt/qtcore "export EXTRA_CXXFLAGS='${CXXFLAGS}' EXTRA_LFLAGS='${LDFLAGS}'" #work around overwritten flags (#32)
sys-libs/ncurses *FLAGS-=-Wl,--as-needed *FLAGS+=-ldl # checking whether able to link to dl*() functions... configure: error: Cannot link test program for libdl (#111)
sys-libs/ncurses-compat *FLAGS-=-Wl,--as-needed *FLAGS+=-ldl # checking whether able to link to dl*() functions... configure: error: Cannot link test program for libdl (#111)
kde-apps/dolphin *FLAGS-="-Wl,--as-needed" # ( https://github.com/InBetweenNames/gentooLTO/issues/50 )

sys-power/thermald *FLAGS+=-Wl,--no-fatal-warnings *FLAGS+=-Wno-error

#dev-lang/php "export EXTRA_ECONF=--disable-gcc-global-regs" # or dev-lang/php *FLAGS+="-flto-partition=max" for < 7.2 # https://bugs.php.net/bug.php?id=72702 # Worse performance than otherwise #109
net-mail/mailutils "has ldap ${IUSE//+} && use ldap && FlagAdd LDFLAGS -llber" #With LTO, this dependency must be linked in explicitly to resolve undefined reference errors "ber_memvfree" and so on
dev-lisp/clisp *FLAGS+=-falign-functions # Issue #128.  Function alignment problem.

# BEGIN: Deliberate -O3 workarounds
media-libs/flac *FLAGS+=-fno-ipa-cp-clone # -fipa-cp-clone is enabled by default at -O3, breaks 'flac -d' if used in conjunction with -flto under GCC 8.3.0
media-libs/faad2 *FLAGS+=-fno-tree-loop-vectorize # causes subtly wrong decoding
kde-frameworks/kactivities-stats /-O3/-O2 # causes systemsettings5 to crash
# END: Deliberate -O3 workarounds

# BEGIN: -Ofast workarounds
dev-lang/python *FLAGS+='-fno-finite-math-only' # instrumentation tests hang/segfault during emerge
<media-libs/opus-1.3.1-r1 /-Ofast/'-O3 ${SAFER_FAST_MATH}' /-ffast-math/'${SAFER_FAST_MATH}' # preprocessor in the source throws an error if ffast-math is enabled
kde-frameworks/kjs /-Ofast/'-O3 ${SAFER_FAST_MATH}' /-ffast-math/'${SAFER_FAST_MATH}' # preprocessor in the source throws an error if ffast-math is enabled
dev-python/numpy /-Ofast/'-O3 ${SAFER_FAST_MATH}' /-ffast-math/'${SAFER_FAST_MATH}' /-funsafe-math-optimizations/'${SAFER_UNSAFE_MATH_OPTS}' # no compilation error, but -funsafe-math-optimizations (implied by -Ofast or -ffast-math) causes an undefined symbol error when trying to import numpy in python
net-analyzer/rrdtool *FLAGS+='-fno-finite-math-only' # configure fails due to non-compliant IEEE arithmetic
dev-lang/R *FLAGS+='-fno-finite-math-only' # R itself compiles fine, but runtime errors cause installation of R library tools to fail during emerge
>=sys-apps/coreutils-8.31 *FLAGS+='-fno-finite-math-only' # causes multiple definition of `minus_zero` error during linking
>=sys-apps/groff-1.22.4 *FLAGS+='-fsigned-zeros' # causes conflicting declaration of `signbit` compilation error
x11-misc/redshift *FLAGS+='-fno-finite-math-only' # compiles fine but -ffinite-math-only causes a runtime error where the brightness values are interpreted incorrectly
net-libs/nodejs *FLAGS+='-fno-finite-math-only' # compiles fine but `npm` returns error whenever it starts running
dev-scheme/guile *FLAGS+='-fno-finite-math-only' # build fails with `floating point exception`
# END: -Ofast workarounds

# BEGIN: Will not build with ninja
x11-misc/polybar CMAKE_MAKEFILE_GENERATOR=emake
app-doc/doxygen CMAKE_MAKEFILE_GENERATOR=emake
media-libs/musicbrainz CMAKE_MAKEFILE_GENERATOR=emake
# END: Will not build with ninja

# BEGIN: override-flagomatic workarounds
dev-lang/ghc LTO_ENABLE_FLAGOMATIC=yes
sys-devel/gcc LTO_ENABLE_FLAGOMATIC=yes #Build system requires special attention, use BOOT_CFLAGS to inject flags.  Do not inject -flto, use the USE flag to do this.
dev-lang/gnat-gpl LTO_ENABLE_FLAGOMATIC=yes
# Ebuilds that provide their own 'custom-cflags' and/or 'custom-optimization' USE flag. You should enable those to build with your own set of flags.
app-crypt/johntheripper LTO_ENABLE_FLAGOMATIC=yes
app-crypt/johntheripper-jumbo LTO_ENABLE_FLAGOMATIC=yes
app-emulation/hercules LTO_ENABLE_FLAGOMATIC=yes
app-emulation/wine-any LTO_ENABLE_FLAGOMATIC=yes
app-emulation/wine-d3d9 LTO_ENABLE_FLAGOMATIC=yes
app-emulation/wine-staging LTO_ENABLE_FLAGOMATIC=yes
app-emulation/wine-vanilla LTO_ENABLE_FLAGOMATIC=yes
app-emulation/xen LTO_ENABLE_FLAGOMATIC=yes
app-emulation/xen-pvgrub LTO_ENABLE_FLAGOMATIC=yes
app-emulation/xen-tools LTO_ENABLE_FLAGOMATIC=yes
dev-libs/klibc LTO_ENABLE_FLAGOMATIC=yes
dev-util/electron LTO_ENABLE_FLAGOMATIC=yes
games-emulation/zsnes LTO_ENABLE_FLAGOMATIC=yes
media-libs/libsdl LTO_ENABLE_FLAGOMATIC=yes
#media-libs/libsdl2 LTO_ENABLE_FLAGOMATIC=yes #USE='custom-cflags' currently masked by profile
media-video/libav LTO_ENABLE_FLAGOMATIC=yes
media-video/x264-encoder LTO_ENABLE_FLAGOMATIC=yes
sci-biology/shrimp LTO_ENABLE_FLAGOMATIC=yes
sci-biology/unafold LTO_ENABLE_FLAGOMATIC=yes
sci-chemistry/tm-align LTO_ENABLE_FLAGOMATIC=yes
#sys-boot/gnu-efi LTO_ENABLE_FLAGOMATIC=yes #USE='custom-cflags' currently masked by profile
#sys-boot/refind LTO_ENABLE_FLAGOMATIC=yes #USE='custom-cflags' currently masked by profile
sys-boot/syslinux LTO_ENABLE_FLAGOMATIC=yes
sys-boot/tboot LTO_ENABLE_FLAGOMATIC=yes
sys-fs/zfs LTO_ENABLE_FLAGOMATIC=yes
sys-fs/zfs-kmod LTO_ENABLE_FLAGOMATIC=yes
sys-kernel/spl LTO_ENABLE_FLAGOMATIC=yes
www-client/chromium LTO_ENABLE_FLAGOMATIC=yes
www-client/firefox LTO_ENABLE_FLAGOMATIC=yes #The ebuild does respect your CFLAGS, it just does some messing around for enabling -flto and -O3.
www-client/torbrowser LTO_ENABLE_FLAGOMATIC=yes
dev-libs/openssl LTO_ENABLE_FLAGOMATIC=yes
# END: override-flagomatic workarounds

#>=sys-devel/gcc-9 *FLAGS-=-flto* BOOT_CFLAGS='"${CFLAGS}"'

# BEGIN: -fipa-pta workarounds
www-client/firefox *FLAGS-="-fipa-pta" #ICE on -fipa-pta
www-client/torbrowser *FLAGS-="-fipa-pta" #ICE on -fipa-pta
=sys-apps/gawk-4.1.4 *FLAGS-="-fipa-pta" # during IPA pass: pta lto1: internal compiler error: Segmentation fault
dev-qt/qtwebkit *FLAGS-="-fipa-pta"
dev-lang/R *FLAGS-="-fipa-pta" # during IPA pass: pta lto1: internal compiler error: Segmentation fault
sys-devel/gcc *FLAGS-="-fipa-pta"
dev-lang/gnat-gpl *FLAGS-="-fipa-pta"
dev-lang/php *FLAGS-="-fipa-pta" # Segfaults when compiled with -fipa-pta
dev-lisp/sbcl *FLAGS-="-fipa-pta" #ICE on -fipa-pta
x11-wm/bspwm *FLAGS-="-fipa-pta" # needed for version 0.9.7 on 17.0 profile running the testing branch everywhere with GCC 8.3.0
media-libs/libwebp *FLAGS-="-fipa-pta" # no compilation issues, but -fipa-pta causes webp images to be displayed incorrectly
dev-qt/qtgui *FLAGS-="-fipa-pta" # Same problem as above
# END: -fipa-pta workarounds

# BEGIN: TLS dialect workarounds
www-client/firefox *FLAGS-="-mtls-dialect=gnu2"
sys-fs/eudev *FLAGS-="-mtls-dialect=gnu2"
sys-libs/glibc *FLAGS-="-mtls-dialect=gnu2"
dev-lang/mono *FLAGS-="-mtls-dialect=gnu2"
dev-lang/python *FLAGS-="-mtls-dialect=gnu2"
dev-util/lldb *FLAGS-="-mtls-dialect=gnu2"
dev-db/firebird *FLAGS-="-mtls-dialect=gnu2"
dev-lang/spidermonkey *FLAGS-="-mtls-dialect=gnu2"
sys-fs/btrfs-progs *FLAGS-="-mtls-dialect=gnu2"
sys-boot/systemd-boot *FLAGS-="-mtls-dialect=gnu2"
# END: TLS dialect workarounds

# BEGIN: Semantic Interposition workarounds
app-misc/tracker *FLAGS-="-fno-semantic-interposition" # builds but makes gnome-base/nautilus deadlock
net-fs/autofs *FLAGS-="-fno-semantic-interposition" # builds but segfault in lookup_file.so
net-print/cups *FLAGS-="-fno-semantic-interposition" # ICE
sys-devel/llvm *FLAGS-="-fno-semantic-interposition"
sys-libs/glibc *FLAGS-="-fno-semantic-interposition"
app-office/libreoffice *FLAGS-="-fno-semantic-interposition"
# END: Semantic Interposition Workarounds

# BEGIN: No PLT workarounds
dev-libs/nss *FLAGS-="-fno-plt"
sys-libs/glibc *FLAGS-="-fno-plt" #When using prelink, will cause a bunch of segfaults.
media-video/ffmpeg *FLAGS-="-fno-plt"
app-emulation/wine-staging *FLAGS-="-fno-plt"
# END: No PLT workarounds

# BEGIN: -fdevirtualize-at-ltrans workarounds
app-text/lcdf-typetools *FLAGS-="-fdevirtualize-at-ltrans" # ICE on static-var pass
dev-python/pycryptodomex *FLAGS-="-fdevirtualize-at-ltrans" # ICE on read_cgraph_and_symbols
# END: -fdevirtualize-at-ltrans workarounds

# BEGIN: GOLD linker workarounds
media-libs/libcaca *FLAGS+="-fuse-ld=bfd"
dev-util/kbuild *FLAGS+="-fuse-ld=bfd"
games-emulation/pcsx2 *FLAGS+="-fuse-ld=bfd"
net-misc/curl *FLAGS+="-fuse-ld=bfd"
# END: GOLD linker workarounds

# BEGIN: GNU linker workarounds
<=media-gfx/blender-2.79b-r1 *FLAGS-="-fuse-ld=bfd" *FLAGS+="-fuse-ld=gold"
# END: GNU linker workarounds

# BEGIN: -fno-common workarounds
app-accessibility/at-spi2-atk *FLAGS-="-fno-common"
app-admin/logrotate *FLAGS-="-fno-common"
app-admin/syslog-ng *FLAGS-="-fno-common"
app-arch/cpio *FLAGS-="-fno-common"
app-arch/file-roller *FLAGS-="-fno-common"
app-crypt/gnupg *FLAGS-="-fno-common"
app-crypt/staticgpg *FLAGS-="-fno-common"
app-editors/neovim *FLAGS-="-fno-common"
app-text/mupdf *FLAGS-="-fno-common"
app-text/texlive-core *FLAGS-="-fno-common"
app-text/ttf2pk2 *FLAGS-="-fno-common"
dev-db/redis *FLAGS-="-fno-common"
dev-java/icedtea *FLAGS-="-fno-common"
dev-lang/R *FLAGS-="-fno-common"
dev-lang/erlang *FLAGS-="-fno-common"
dev-lang/orc *FLAGS-="-fno-common"
dev-libs/bemenu *FLAGS-="-fno-common"
dev-libs/dbus-glib *FLAGS-="-fno-common"
dev-libs/ffcall *FLAGS-="-fno-common"
dev-libs/fribidi *FLAGS-="-fno-common"
dev-libs/gobject-introspection *FLAGS-="-fno-common"
dev-libs/libltdl *FLAGS-="-fno-common" # builds but causes symbol lookup errors
dev-libs/libmspack *FLAGS-="-fno-common"
dev-libs/libpipeline *FLAGS-="-fno-common"
dev-libs/libx86emu *FLAGS-="-fno-common"
dev-python/dbus-python *FLAGS-="-fno-common"
dev-python/nautilus-python *FLAGS-="-fno-common"
dev-util/android-tools *FLAGS-="-fno-common"
dev-util/pkgconf *FLAGS-="-fno-common"
gnome-base/gnome-control-center *FLAGS-="-fno-common"
gnome-base/librsvg *FLAGS-="-fno-common"
gui-apps/wl-clipboard *FLAGS-="-fno-common"
gui-libs/wlroots *FLAGS-="-fno-common"
gui-wm/sway *FLAGS-="-fno-common"
media-gfx/imagemagick *FLAGS-="-fno-common"
media-libs/freeglut *FLAGS-="-fno-common"
media-libs/gegl *FLAGS-="-fno-common"
media-libs/glu *FLAGS-="-fno-common"
media-libs/gstreamer *FLAGS-="-fno-common"
media-libs/libv4l *FLAGS-="-fno-common"
media-libs/mesa *FLAGS-="-fno-common"
media-libs/openal *FLAGS-="-fno-common"
media-sound/musepack-tools *FLAGS-="-fno-common"
media-sound/sox *FLAGS-="-fno-common"
media-sound/wavpack *FLAGS-="-fno-common"
net-analyzer/iftop *FLAGS-="-fno-common"
net-analyzer/openvas-manager *FLAGS-="-fno-common"
net-fs/nfs-utils *FLAGS-="-fno-common"
net-libs/libmbim *FLAGS-="-fno-common"
net-libs/libqmi *FLAGS-="-fno-common"
net-libs/libtirpc *FLAGS-="-fno-common"
net-misc/curl *FLAGS-="-fno-common"
net-misc/dhcp *FLAGS-="-fno-common"
net-misc/iputils *FLAGS-="-fno-common"
net-misc/modemmanager *FLAGS-="-fno-common"
net-misc/networkmanager *FLAGS-="-fno-common"
net-misc/ntpsec *FLAGS-="-fno-common"
net-misc/socat *FLAGS-="-fno-common"
net-misc/vinagre *FLAGS-="-fno-common"
net-print/cups-filters *FLAGS-="-fno-common"
sys-apps/dtc *FLAGS-="-fno-common"
sys-apps/iproute2 *FLAGS-="-fno-common"
sys-apps/kbd *FLAGS-="-fno-common"
sys-apps/memtester *FLAGS-="-fno-common"
sys-apps/the_silver_searcher *FLAGS-="-fno-common"
sys-apps/usbredir *FLAGS-="-fno-common"
sys-boot/syslinux *FLAGS-="-fno-common"
sys-devel/bmake *FLAGS-="-fno-common"
sys-fs/squashfs-tools *FLAGS-="-fno-common"
>=sys-fs/xfsprogs-5.2.0 *FLAGS-="-fno-common"
sys-libs/gdbm *FLAGS-="-fno-common"
sys-libs/gpm *FLAGS-="-fno-common"
sys-libs/libunwind *FLAGS-="-fno-common"
sys-power/cpupower *FLAGS-="-fno-common"
sys-power/iasl *FLAGS-="-fno-common"
sys-power/upower *FLAGS-="-fno-common"
sys-process/audit *FLAGS-="-fno-common"
sys-process/htop *FLAGS-="-fno-common"
x11-base/xorg-server *FLAGS-="-fno-common"
x11-drivers/xf86-video-amdgpu *FLAGS-="-fno-common"
x11-drivers/xf86-video-ati *FLAGS-="-fno-common"
x11-drivers/xf86-video-intel *FLAGS-="-fno-common"
x11-libs/libva-intel-driver *FLAGS-="-fno-common"
x11-libs/pango *FLAGS-="-fno-common"
x11-libs/xcb-util-cursor *FLAGS-="-fno-common"
x11-libs/xcb-util-xrm *FLAGS-="-fno-common"
x11-terms/kitty *FLAGS-="-fno-common"
x11-wm/i3 *FLAGS-="-fno-common"
# END: -fno-common workarounds

#sys-devel/prelink EGIT_BRANCH="master_staging"
